% ini.sl initialization file for the library dir /home/alpha/.jed/lib
% automatically generated by make_ini([dir])

% declare a function (autoload + add_completion)
define declare_fun (fun, where_from)
{
   autoload (fun, where_from);
   add_completion (fun);
}

% bufutils.sl
% bufutils.sl  Tools for buffer and windows handling
% by Guenter Milde <g.milde@web.de>
% custom_variable("Max_Popup_Size", 0.7);          % max size of one popup window
declare_fun("push_defaults", "bufutils.sl");
declare_fun("push_array", "bufutils.sl");
declare_fun("_implements", "bufutils.sl");
declare_fun("autoload_if_present", "bufutils.sl");
declare_fun("get_blocal", "bufutils.sl");
declare_fun("buffer_dirname", "bufutils.sl");
declare_fun("fit_window", "bufutils.sl");
declare_fun("close_buffer", "bufutils.sl");
declare_fun("close_other_buffer", "bufutils.sl");
declare_fun("next_buffer", "bufutils.sl");
declare_fun("go2buf", "bufutils.sl");
declare_fun("popup_buffer", "bufutils.sl");
declare_fun("push_keymap", "bufutils.sl");
declare_fun("pop_keymap", "bufutils.sl");
declare_fun("rebind", "bufutils.sl");
declare_fun("strread_file", "bufutils.sl");
declare_fun("restore_buffer", "bufutils.sl");
declare_fun("run_function", "bufutils.sl");
declare_fun("run_blocal_hook", "bufutils.sl");
declare_fun("run_buffer", "bufutils.sl");

% colorin.sl
%
% colorin.sl
% custom_variable( "Colorin_Left", color_number( "menu_selection_char" ));
% custom_variable( "Colorin_Line", color_number( "menu_selection" ));
declare_fun("set_colorin", "colorin.sl");

% css1.sl
%{{{ Documentation
%
declare_fun("css1_mode", "css1.sl");

% diagnose.sl
% diagnose.sl   Diagnostic functions
% show the value of variables (nice for debugging)
% custom_variable("Diagnose_Buffer", "*debug*");
% custom_variable("Diagnose_Popup", 0.3);
declare_fun("show_string", "diagnose.sl");
declare_fun("sprint_args", "diagnose.sl");
declare_fun("show", "diagnose.sl");
declare_fun("smessage", "diagnose.sl");
declare_fun("show_object", "diagnose.sl");
declare_fun("show_stack", "diagnose.sl");
declare_fun("show_eval", "diagnose.sl");

% diff_mode.sl
% diff_mode.sl -*- mode: Slang; mode: fold -*-
% Unified diff mode for jed
declare_fun("diff_top_of_file", "diff_mode.sl");
declare_fun("diff_end_of_file", "diff_mode.sl");
declare_fun("diff_top_of_block", "diff_mode.sl");
declare_fun("diff_end_of_block", "diff_mode.sl");
declare_fun("diff_mark_file", "diff_mode.sl");
declare_fun("diff_mark_block", "diff_mode.sl");
declare_fun("diff_narrow_to_file", "diff_mode.sl");
declare_fun("diff_narrow_to_block", "diff_mode.sl");
declare_fun("diff_redo_block", "diff_mode.sl");
declare_fun("diff_redo_file", "diff_mode.sl");
declare_fun("diff_remove_only_lines", "diff_mode.sl");
declare_fun("diff_remove_block", "diff_mode.sl");
declare_fun("diff_add_saurus_bindings", "diff_mode.sl");
declare_fun("diff_jump_to_", "diff_mode.sl");
declare_fun("diff_mode", "diff_mode.sl");

% grep.sl
% file grep.sl
% -*- mode: SLang; mode: fold -*-
% custom_variable("Grep_Dirs", ".");
% custom_variable("Include_Braket_Dirs", "/usr/include,.");
% custom_variable("Include_Quote_Dirs", ".,./include,../include,./source,../source,./src,../src");
% custom_variable ("GrepCommand", "egrep -n");
declare_fun("grep_follow", "grep.sl");
declare_fun("grep_tag_line", "grep.sl");
declare_fun("grep_remove_selected_lines", "grep.sl");
declare_fun("grep_follow", "grep.sl");
declare_fun("grep_mode", "grep.sl");
declare_fun("grep", "grep.sl");
declare_fun("follow_include", "grep.sl");
declare_fun("follow_grep", "grep.sl");
declare_fun("follow_list", "grep.sl");
declare_fun("follow_file", "grep.sl");
declare_fun("grep_mouse_2click_hook", "grep.sl");
declare_fun("grep_remove_tagged", "grep.sl");
declare_fun("_dump_mark", "grep.sl");

% help.sl
%% help.sl
%% edited by Guenter Milde <g.milde@web.de>
% custom_variable("Help_max_window_size", 0.7);
% custom_variable("Help_with_history", 1);
% custom_variable("Help_message_for_one_liners", 0);
% custom_variable("Help_mini_help_for_word_at_point", 0);
% custom_variable("Help_file", "generic.hlp");
declare_fun("read_function_from_mini", "help.sl");
declare_fun("read_variable_from_mini", "help.sl");
declare_fun("help_previous_topic", "help.sl");
declare_fun("help_next_topic", "help.sl");
declare_fun("help", "help.sl");
declare_fun("help_for_help", "help.sl");
declare_fun("apropos", "help.sl");
declare_fun("expand_keystring", "help.sl");
declare_fun("showkey", "help.sl");
declare_fun("where_is", "help.sl");
declare_fun("where_is_word_at_point", "help.sl");
declare_fun("describe_function", "help.sl");
declare_fun("describe_variable", "help.sl");
declare_fun("describe_mode", "help.sl");
declare_fun("describe_bindings", "help.sl");
declare_fun("grep_definition", "help.sl");
declare_fun("help_grep_definition", "help.sl");
declare_fun("set_variable", "help.sl");
declare_fun("extract_mini_doc", "help.sl");
declare_fun("mini_help_for_object", "help.sl");
declare_fun("help_for_word_at_point", "help.sl");
declare_fun("help_2click_hook", "help.sl");
declare_fun("help_goto_next_object", "help.sl");
declare_fun("help_goto_prev_object", "help.sl");
declare_fun("help_mode", "help.sl");
declare_fun("help_for_object", "help.sl");
declare_fun("help_display", "help.sl");
declare_fun("strsub_control_chars", "help.sl");
declare_fun("help_for_object", "help.sl");
declare_fun("help_mode", "help.sl");

% home-lib.sl
% home-lib.sl: 
% Support for a user-specific ~/.jed/ directory with private extensions.

% mail_mode.sl
% -*- SLang -*-
declare_fun("bol_skip_tags", "mail_mode.sl");
declare_fun("count_tags", "mail_mode.sl");
declare_fun("bol_skip_all_tags", "mail_mode.sl");
declare_fun("dequote_buffer", "mail_mode.sl");
declare_fun("requote_buffer", "mail_mode.sl");
declare_fun("empty_quoted_line", "mail_mode.sl");
declare_fun("mail_is_tag", "mail_mode.sl");
declare_fun("mail_have_header", "mail_mode.sl");
declare_fun("mail_is_body", "mail_mode.sl");
declare_fun("mail_is_header_tag", "mail_mode.sl");
declare_fun("maybe_signature", "mail_mode.sl");
declare_fun("mail_parsep", "mail_mode.sl");
declare_fun("mail_backward_paragraph", "mail_mode.sl");
declare_fun("mail_forward_paragraph", "mail_mode.sl");
declare_fun("mail_begin_of_paragraph", "mail_mode.sl");
declare_fun("mail_select_paragraph", "mail_mode.sl");
declare_fun("dequote", "mail_mode.sl");
declare_fun("requote", "mail_mode.sl");
declare_fun("mail_fix_quotes", "mail_mode.sl");
declare_fun("reformat_header", "mail_mode.sl");
declare_fun("reformat_quote", "mail_mode.sl");
declare_fun("mail_indent_calculate", "mail_mode.sl");
declare_fun("mail_indent_line", "mail_mode.sl");
declare_fun("mail_reformat", "mail_mode.sl");
declare_fun("mail_mode", "mail_mode.sl");

% make_ini.sl
% make_ini.sl 
% A tool to set up non-standard extensions (modes and tools)for jed. 
declare_fun("look_for_functions", "make_ini.sl");
declare_fun("make_ini", "make_ini.sl");

% makemode.sl
% This module implements simple highlighting and indenting for makefiles. 
% The important functionality is the special highlighting of lines that
declare_fun("is_rule_start_line", "makemode.sl");
declare_fun("is_in_rule", "makemode.sl");
declare_fun("make_indent_line", "makemode.sl");
declare_fun("make_mode", "makemode.sl");

% navigate.sl
% navigate.sl
% "history feature" (recent visited buffer) known from many browsers.
% custom_variable("Navigate_Stack_Size", 10);
% custom_variable("Navigate_Restore_Buffers", 1);
% custom_variable("Navigate_Append_at_End", 0);
declare_fun("navigate_back", "navigate.sl");
declare_fun("navigate_forward", "navigate.sl");
declare_fun("navigate_append_buffer", "navigate.sl");

% php.sl
%   file     : php.sl
%   author   : Mikael Hultgren <mikael_hultgren@gmx.net>
% custom_variable( "PHP_INDENT", 4 );
% custom_variable( "PHP_BRACE", 0 );
% custom_variable( "PHP_BRA_NEWLINE", 0 );
% custom_variable( "PHP_CONTINUED_OFFSET", 2 );
% custom_variable( "PHP_COLON_OFFSET", 1 );
% custom_variable( "PHP_CLASS_OFFSET", 4 );
% custom_variable( "PHP_SWITCH_OFFSET", 0 );
% custom_variable( "PHP_KET_NEWLINE", 0 );
% custom_variable( "PHP_Autoinsert_Comments", 0 );
declare_fun("php_revision", "php.sl");
declare_fun("php_paragraph_sep", "php.sl");
declare_fun("php_format_paragraph", "php.sl");
declare_fun("php_in_block", "php.sl");
declare_fun("php_top_of_function", "php.sl");
declare_fun("php_end_of_function", "php.sl");
declare_fun("php_mark_function", "php.sl");
declare_fun("php_mark_matching", "php.sl");
declare_fun("php_bskip_over_comment", "php.sl");
declare_fun("php_indent_line", "php.sl");
declare_fun("php_indent_region_or_line", "php.sl");
declare_fun("php_indent_buffer", "php.sl");
declare_fun("php_newline_and_indent", "php.sl");
declare_fun("php_insert_bra", "php.sl");
declare_fun("php_insert_ket", "php.sl");
declare_fun("php_insert_colon", "php.sl");
declare_fun("php_getname", "php.sl");
declare_fun("php_ins_tn", "php.sl");
declare_fun("php_insert_function", "php.sl");
declare_fun("php_insert_class", "php.sl");
declare_fun("php_insert_tab", "php.sl");
declare_fun("php_mode", "php.sl");

% project.sl
%_debug_info = 1;
%_traceback = 1;
% custom_variable("Project_Global_File", NULL);

% recent.sl
% File:          recent.sl      -*- SLang -*-
% Provide easy access to recently opened/saved files.
% custom_variable("RECENT_FILES_LIST", "_jedrcnt");
% custom_variable("RECENT_FILES_LIST", ".jedrecent");
% custom_variable("Local_Recent_List", -1);
% custom_variable("MAX_RECENT_FILES", 15);
% custom_variable("RECENT_FILES_EXCLUDE", "^/tmp");
% custom_variable("Restore_Last_Session", 0);
declare_fun("what_line_if_wide", "recent.sl");
declare_fun("append_to_recent_files", "recent.sl");
declare_fun("recent_toggle_local", "recent.sl");
declare_fun("recent_files_menu_callback", "recent.sl");

% register.sl
% Register facility.  This provides up to 95 pastebuffers.
%
declare_fun("get_registers", "register.sl");
declare_fun("set_registers", "register.sl");
declare_fun("reg_copy_to_register", "register.sl");
declare_fun("reg_insert_register", "register.sl");
declare_fun("reg_quit", "register.sl");
declare_fun("reg_insert", "register.sl");
declare_fun("reg_help", "register.sl");
declare_fun("register_mode", "register.sl");

% regslave.sl
%
% regslave.sl
% custom_variable( "Registers_File",
declare_fun("registers_load", "regslave.sl");
declare_fun("registers_save", "regslave.sl");
declare_fun("registers_local_save", "regslave.sl");

% sprint_var.sl
% --- Formatted info about variable values ---
% custom_variable("Sprint_Indent", "   ");
declare_fun("sprint_variable", "sprint_var.sl");
declare_fun("multidimensional_indices", "sprint_var.sl");
declare_fun("sprint_array", "sprint_var.sl");
declare_fun("sprint_assoc", "sprint_var.sl");
declare_fun("sprint_struct", "sprint_var.sl");
declare_fun("mark_info", "sprint_var.sl");
declare_fun("sprint_mark", "sprint_var.sl");
declare_fun("sprint_string", "sprint_var.sl");
declare_fun("sprint_char", "sprint_var.sl");
declare_fun("sprint_any", "sprint_var.sl");

% txtutils.sl
% textutils.sl: Tools for text processing (marking, string processing,
% formatting)
declare_fun("mark_word", "txtutils.sl");
declare_fun("bmark_word", "txtutils.sl");
declare_fun("get_word", "txtutils.sl");
declare_fun("bget_word", "txtutils.sl");
declare_fun("indent_buffer", "txtutils.sl");
declare_fun("indent_region_or_line", "txtutils.sl");
declare_fun("number_lines", "txtutils.sl");
declare_fun("string_reverse", "txtutils.sl");

% xmlmode.sl
% A reasonable XML mode. Might be usable for SGML. Is certainly not 
% usable for ordinary HTML, but XHTML should be fine. 
declare_fun("xml_start_of_next_word", "xmlmode.sl");
declare_fun("xml_indent_line", "xmlmode.sl");
declare_fun("xml_slash", "xmlmode.sl");
declare_fun("xml_close_tag", "xmlmode.sl");
declare_fun("xml_mode", "xmlmode.sl");
